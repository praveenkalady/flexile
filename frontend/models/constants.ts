import c from "../../backend/config/countries.json";

export const CURRENCIES = [
  { name: "USD (United States Dollar)", value: "USD" },
  { name: "AED (United Arab Emirates Dirham)", value: "AED" },
  { name: "ARS (Argentine Peso)", value: "ARS" },
  { name: "AUD (Australian Dollar)", value: "AUD" },
  { name: "BGN (Bulgarian Lev)", value: "BGN" },
  { name: "BRL (Brazilian Real)", value: "BRL" },
  { name: "BWP (Botswana Pula)", value: "BWP" },
  { name: "CAD (Canadian Dollar)", value: "CAD" },
  { name: "CHF (Swiss Franc)", value: "CHF" },
  { name: "CLP (Chilean Peso)", value: "CLP" },
  { name: "CRC (Costa Rican Colón)", value: "CRC" },
  { name: "CZK (Czech Koruna)", value: "CZK" },
  { name: "DKK (Danish Krone)", value: "DKK" },
  { name: "EGP (Egyptian Pound)", value: "EGP" },
  { name: "EUR (Euro)", value: "EUR" },
  { name: "GBP (British Pound)", value: "GBP" },
  { name: "GEL (Georgian Lari)", value: "GEL" },
  { name: "GHS (Ghanaian Cedi)", value: "GHS" },
  { name: "HKD (Hong Kong Dollar)", value: "HKD" },
  { name: "HUF (Hungarian Forint)", value: "HUF" },
  { name: "IDR (Indonesian Rupiah)", value: "IDR" },
  { name: "ILS (Israeli New Sheqel)", value: "ILS" },
  { name: "INR (Indian Rupee)", value: "INR" },
  { name: "JPY (Japanese Yen)", value: "JPY" },
  { name: "KES (Kenyan Shilling)", value: "KES" },
  { name: "KRW (South Korean Won)", value: "KRW" },
  { name: "LKR (Sri Lankan Rupee)", value: "LKR" },
  { name: "MAD (Moroccan Dirham)", value: "MAD" },
  { name: "MXN (Mexican Peso)", value: "MXN" },
  { name: "MYR (Malaysian Ringgit)", value: "MYR" },
  { name: "MZN (Mozambican Metical)", value: "MZN" },
  { name: "NAD (Namibian Dollar)", value: "NAD" },
  { name: "NOK (Norwegian Krone)", value: "NOK" },
  { name: "NZD (New Zealand Dollar)", value: "NZD" },
  { name: "PEN (Peruvian Sol)", value: "PEN" },
  { name: "PHP (Philippine Peso)", value: "PHP" },
  { name: "PLN (Polish Złoty)", value: "PLN" },
  { name: "RON (Romanian Leu)", value: "RON" },
  { name: "SEK (Swedish Krona)", value: "SEK" },
  { name: "SGD (Singapore Dollar)", value: "SGD" },
  { name: "THB (Thai Baht)", value: "THB" },
  { name: "TRY (Turkish Lira)", value: "TRY" },
  { name: "UAH (Ukrainian Hryvnia)", value: "UAH" },
  { name: "UYU (Uruguayan Peso)", value: "UYU" },
  { name: "XOF (West African Cfa Franc)", value: "XOF" },
  { name: "ZAR (South African Rand)", value: "ZAR" },
  { name: "ZMW (Zambian Kwacha)", value: "ZMW" },
] as const;

export type Currency = (typeof CURRENCIES)[number]["value"];
// eslint-disable-next-line @typescript-eslint/consistent-type-assertions -- required for Zod, and can't be expressed by TS well
export const currencyCodes = CURRENCIES.map(({ value }) => value) as [Currency, ...Currency[]];

export const currencyByCountryCode = new Map<string, Currency>([
  ["AX", "EUR"],
  ["AS", "USD"],
  ["AD", "EUR"],
  ["AQ", "USD"],
  ["AR", "ARS"],
  ["AU", "AUD"],
  ["AT", "EUR"],
  ["BE", "EUR"],
  ["BJ", "XOF"],
  ["BQ", "USD"],
  ["BR", "BRL"],
  ["BW", "BWP"],
  ["BV", "NOK"],
  ["IO", "USD"],
  ["BG", "BGN"],
  ["BF", "XOF"],
  ["CA", "CAD"],
  ["CL", "CLP"],
  ["CX", "AUD"],
  ["CC", "AUD"],
  ["CK", "NZD"],
  ["CR", "CRC"],
  ["CI", "XOF"],
  ["HR", "EUR"],
  ["CY", "EUR"],
  ["CZ", "CZK"],
  ["DK", "DKK"],
  ["EC", "USD"],
  ["EG", "EGP"],
  ["SV", "USD"],
  ["EE", "EUR"],
  ["FO", "DKK"],
  ["FI", "EUR"],
  ["FR", "EUR"],
  ["GF", "EUR"],
  ["TF", "EUR"],
  ["GE", "GEL"],
  ["DE", "EUR"],
  ["GH", "GHS"],
  ["GR", "EUR"],
  ["GL", "DKK"],
  ["GP", "EUR"],
  ["GU", "USD"],
  ["GG", "GBP"],
  ["GW", "XOF"],
  ["HM", "AUD"],
  ["VA", "EUR"],
  ["HK", "HKD"],
  ["HU", "HUF"],
  ["IN", "INR"],
  ["ID", "IDR"],
  ["IE", "EUR"],
  ["IM", "GBP"],
  ["IL", "ILS"],
  ["IT", "EUR"],
  ["JP", "JPY"],
  ["JE", "GBP"],
  ["KE", "KES"],
  ["KI", "AUD"],
  ["KR", "KRW"],
  ["LV", "EUR"],
  ["LI", "CHF"],
  ["LT", "EUR"],
  ["LU", "EUR"],
  ["MY", "MYR"],
  ["ML", "XOF"],
  ["MT", "EUR"],
  ["MH", "USD"],
  ["MQ", "EUR"],
  ["YT", "EUR"],
  ["MX", "MXN"],
  ["FM", "USD"],
  ["MC", "EUR"],
  ["ME", "EUR"],
  ["MA", "MAD"],
  ["MZ", "MZN"],
  ["NA", "NAD"],
  ["NR", "AUD"],
  ["NL", "EUR"],
  ["NZ", "NZD"],
  ["NE", "XOF"],
  ["NU", "NZD"],
  ["NF", "AUD"],
  ["MP", "USD"],
  ["NO", "NOK"],
  ["PW", "USD"],
  ["PS", "ILS"],
  ["PE", "PEN"],
  ["PH", "PHP"],
  ["PN", "NZD"],
  ["PL", "PLN"],
  ["PT", "EUR"],
  ["PR", "USD"],
  ["RE", "EUR"],
  ["RO", "RON"],
  ["BL", "EUR"],
  ["MF", "EUR"],
  ["PM", "EUR"],
  ["SM", "EUR"],
  ["SN", "XOF"],
  ["SG", "SGD"],
  ["SK", "EUR"],
  ["SI", "EUR"],
  ["ZA", "ZAR"],
  ["GS", "GBP"],
  ["ES", "EUR"],
  ["LK", "LKR"],
  ["SJ", "NOK"],
  ["SE", "SEK"],
  ["CH", "CHF"],
  ["TH", "THB"],
  ["TL", "IDR"],
  ["TG", "XOF"],
  ["TK", "NZD"],
  ["TR", "TRY"],
  ["TC", "USD"],
  ["TV", "AUD"],
  ["UA", "UAH"],
  ["AE", "AED"],
  ["GB", "GBP"],
  ["UM", "USD"],
  ["US", "USD"],
  ["UY", "UYU"],
  ["VG", "USD"],
  ["VI", "USD"],
  ["EH", "MAD"],
  ["ZM", "ZMW"],
  ["ZW", "USD"],
]);

export const INVITATION_TOKEN_COOKIE_NAME = "invitation_token";
export const INVITATION_TOKEN_COOKIE_MAX_AGE = 60 * 60 * 24 * 1;

export const countries = new Map<string, string>(
  Object.entries(c).map(([countryCode, info]) => [countryCode, info.countryName]),
);
export const supportedCountries = new Map<string, string>(
  Object.entries(c)
    .filter(([_, info]) => info.supportsWisePayout)
    .map(([countryCode, info]) => [countryCode, info.countryName]),
);
export const sanctionedCountries = new Map<string, string>(
  Object.entries(c)
    .filter(([_, info]) => info.sanctioned)
    .map(([countryCode, info]) => [countryCode, info.countryName]),
);
export { c as countryInfos };

export const storageKeys = {
  DOCUMENTS_COLUMN_FILTERS: "documentsColumnFilters",
  INVESTORS_COLUMN_SETTINGS: "investorsColumnSettings",
  EQUITY_MENU_STATE: "equity-menu-state",
  SETTINGS_MENU_STATE: "settings-menu-state",
  GETTING_STARTED_STATUS: "getting-started-status",
};

// PDF Upload Configuration
// Get max file size from environment or use default 10MB
const PDF_MAX_FILE_SIZE_BYTES = parseInt(process.env.NEXT_PUBLIC_PDF_MAX_FILE_SIZE || "10485760", 10);
export const PDF_MAX_FILE_SIZE_MB = Number((PDF_MAX_FILE_SIZE_BYTES / (1024 * 1024)).toFixed(1));

export const PDF_MAX_FILE_SIZE = PDF_MAX_FILE_SIZE_BYTES;

export const formatFileSize = (bytes: number): string => {
  const mb = bytes / (1024 * 1024);
  return `${mb.toFixed(1)}MB`;
};
